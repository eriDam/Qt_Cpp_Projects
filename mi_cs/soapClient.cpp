/* soapClient.cpp
   Generated by gSOAP 2.8.21 from cs.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.21 2015-03-16 14:14:40 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_op1(struct soap *soap, const char *soap_endpoint, const char *soap_action, int a, int b, int *r)
{	struct op1 soap_tmp_op1;
	struct op1Response *soap_tmp_op1Response;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp_op1.a = a;
	soap_tmp_op1.b = b;
	soap_serializeheader(soap);
	soap_serialize_op1(soap, &soap_tmp_op1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_op1(soap, &soap_tmp_op1, "op1", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_op1(soap, &soap_tmp_op1, "op1", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!r)
		return soap_closesock(soap);
	soap_default_int(soap, r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_op1Response = soap_get_op1Response(soap, NULL, "op1Response", NULL);
	if (!soap_tmp_op1Response || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (r && soap_tmp_op1Response->r)
		*r = *soap_tmp_op1Response->r;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
